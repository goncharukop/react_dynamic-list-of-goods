{"version":3,"sources":["api/goods.js","components/GoodsList.js","App.js","index.js"],"names":["getAll","fetch","then","response","json","get5First","result","sort","prevGood","nextGood","name","localeCompare","slice","getRedGoods","filter","good","color","GoodsList","goods","className","map","key","id","style","defaultProps","App","state","preparedGoods","func","setState","this","type","onClick","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"6OAGaA,G,YAAS,kBACpBC,MAHW,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,YAGlBC,EAAY,kBACvBL,IACGE,MAAK,SAAAI,GAAM,OAAIA,EACbC,MAAK,SAACC,EAAUC,GAAX,OAAwBD,EAASE,KAAKC,cAAcF,EAASC,SAClEE,MAAM,EAAG,OAGHC,EAAc,kBACzBb,IACGE,MAAK,SAAAI,GAAM,OAAIA,EAAOQ,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKC,aCdlCC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,wBAAIC,UAAU,eACXD,EAAME,KAAI,SAAAL,GAAI,OACb,wBACEM,IAAKN,EAAKO,GACVC,MAAO,CAAEP,MAAOD,EAAKC,QAEpBD,EAAKL,WAgBdO,EAAUO,aAAe,CACvBN,MAAO,I,ICuCMO,E,4MAzDbC,MAAQ,CACNR,MAAO,I,EAGTS,cAAgB,SAACC,GACfA,IAAO1B,MAAK,SAACgB,GACX,EAAKW,SAAS,CACZX,c,uDAKI,IAAD,OACCA,EAAUY,KAAKJ,MAAfR,MAER,OACE,yBAAKC,UAAU,OACb,qDAEA,4BACEA,UAAU,iCACVY,KAAK,SACLC,QAAS,kBACP,EAAKL,cAAc3B,KAJvB,WAUA,4BACEmB,UAAU,kCACVY,KAAK,SACLC,QAAS,kBACP,EAAKL,cAActB,KAJvB,YAUA,4BACEc,UAAU,+BACVY,KAAK,SACLC,QAAS,kBACP,EAAKL,cAAcd,KAJvB,WAUA,yBAAKM,UAAU,YACb,kBAAC,EAAD,CAAWD,MAAOA,U,GAnDVe,IAAMC,eCJxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.980d20c9.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport const getAll = () => (\n  fetch(API_URL)\n    .then(response => response.json())\n);\n\nexport const get5First = () => (\n  getAll()\n    .then(result => result\n      .sort((prevGood, nextGood) => prevGood.name.localeCompare(nextGood.name))\n      .slice(0, 5))\n);\n\nexport const getRedGoods = () => (\n  getAll()\n    .then(result => result.filter(good => good.color === 'red'))\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const GoodsList = ({ goods }) => (\n  <ul className=\"ui big list\">\n    {goods.map(good => (\n      <li\n        key={good.id}\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      color: PropTypes.string.isRequired,\n    }).isRequired,\n  ),\n};\n\nGoodsList.defaultProps = {\n  goods: [],\n};\n","import React from 'react';\n\nimport './App.scss';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { GoodsList } from './components/GoodsList';\n\nclass App extends React.PureComponent {\n  state = {\n    goods: [],\n  }\n\n  preparedGoods = (func) => {\n    func().then((goods) => {\n      this.setState({\n        goods,\n      });\n    });\n  };\n\n  render() {\n    const { goods } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1>Dynamic list of Goods</h1>\n\n        <button\n          className=\"ui inverted green large button\"\n          type=\"button\"\n          onClick={() => (\n            this.preparedGoods(getAll)\n          )}\n        >\n          Get All\n        </button>\n\n        <button\n          className=\"ui inverted orange large button\"\n          type=\"button\"\n          onClick={() => (\n            this.preparedGoods(get5First)\n          )}\n        >\n          Get five\n        </button>\n\n        <button\n          className=\"ui inverted red large button\"\n          type=\"button\"\n          onClick={() => (\n            this.preparedGoods(getRedGoods)\n          )}\n        >\n          Get red\n        </button>\n\n        <div className=\"app_list\">\n          <GoodsList goods={goods} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}